from django.urls import path
from . import views
from apis.views import *

"""
    Path for Restful APIS.
    currently the version of apis is v1.
    @Created By Vashyl.
    @Date   2023/04/21
"""
app_name = 'apis'

urlpatterns = [
    # trigger data_profile_task event
    path("v1/profile/", views.run_data_profile, name="api_data_profile"),
    # get status of data_profile task event
    path("v1/profile/status/", views.run_data_profile_status,
         name="api_data_profile_status"),
    path("v1/exceldata/upper/", ExceldataupperView.as_view(), name='exceldataupper'),
    path("v1/exceldata/lower/", ExceldatalowerView.as_view(), name='exceldatalower'),
    path("v1/exceldata/capitalize/", ExceldatacapitalizeView.as_view(),
         name='exceldatacapitalize'),
    path("v1/exceldata/removepunctuations/",
         ExceldataremovepunctuationsView.as_view(), name='exceldataremovepunctuations'),
    path("v1/exceldata/removespace/", ExceldataremovespaceView.as_view(),
         name='exceldataremovespace'),
    path("v1/exceldata/removenumbers/",
         ExceldataremovenumbersView.as_view(), name='exceldataremovenumber'),
    path("v1/exceldata/removeletters/",
         ExceldataremovelettersView.as_view(), name='exceldataremoveletters'),
    path("v1/exceldata/removelspace/",
         ExceldataremovelspaceView.as_view(), name='exceldataremovelspace'),
    path("v1/exceldata/removerspace/",
         ExceldataremoverspaceView.as_view(), name='exceldataremoverspace'),
    path("v1/exceldata/removenpc/", ExceldataremovenpcView.as_view(),
         name='exceldataremovenpc'),
    path("v1/exceldata/replacestring/",
         ExceldatareplacestringView.as_view(), name='exceldatareplacestring'),
    path("v1/exceldata/copycolumn/", ExceldatacopycolumnView.as_view(),
         name='exceldatacopycolumn'),
    path("v1/exceldata/newcolumnleft/",
         ExceldatanewcolumnleftView.as_view(), name='exceldatanewcolumnleft'),
    path("v1/exceldata/newcolumnright/",
         ExceldatanewcolumnrightView.as_view(), name='exceldatanewcolumnright'),
    path("v1/exceldata/mergecolumn/", ExceldatamergecolumnView.as_view(),
         name='exceldatamergecolumn'),
    path("v1/exceldata/splitcolumn/", ExceldatasplitcolumnView.as_view(),
         name='exceldatasplitcolumn'),
    path("v1/exceldata/searchchar/", ExceldatasearchcharView.as_view(),
         name='exceldatasearchchar'),
    path("v1/exceldata/searchtext/", ExceldatasearchtextView.as_view(),
         name='exceldatasearchtext'),
    path("v1/exceldata/dynamictext/", ExceldatadynamictextView.as_view(),
         name='exceldatadynamictext'),
    path("v1/exceldata/dateconversion/",
         ExceldatadateconversionView.as_view(), name='exceldatadateconversion'),
    path("v1/exceldata/dateconversion/overwrite/",
         ExceldatadateconversionoverwriteView.as_view(), name='exceldatadateconversionoverwrite'),
    path("v1/exceldata/dateconversion/date-month-year/",
         ExceldatadateconversiondmyView.as_view(), name='exceldatadateconversiondmy'),
    path("v1/exceldata/dateconversion/overwrite/date-month-year/",
         ExceldatadateconversionodmyView.as_view(), name='exceldatadateconversionodmy'),
    path("v1/exceldata/dateconversion/month-date-year/",
         ExceldatadateconversionmdyView.as_view(), name='exceldatadateconversionmdy'),
    path("v1/exceldata/dateconversion/overwrite/month-date-year/",
         ExceldatadateconversionomdyView.as_view(), name='exceldatadataconversionomdy'),
    path("v1/exceldata/patternmatch/",
         ExceldatapatternmatchView.as_view(), name='exceldatapatternmatch'),
    path("v1/exceldata/patternmatch/regex/number/",
         ExceldatapatternregexnumbernmatchView.as_view(), name='exceldatapatternmatchregexnum'),
    path("v1/exceldata/patternmatch/regex/string/",
         ExceldatapatternregexstringnmatchView.as_view(), name='exceldatapatternmatchregexstring'),
    path("v1/exceldata/patternmatch/regex/user/",
         ExceldatapatternregexusernmatchView.as_view(), name='exceldatapatternmatchregexuser'),
    path("v1/exceldata/dataconversion/",
         ExceldatadataconversionView.as_view(), name='exceldatadataconversion'),
    path("v1/exceldata/comparecolumn/",
         ExceldatadatacomparetcView.as_view(), name='exceldatacomparecolumn'),
    path("v1/exceldata/comparecolumn/static/",
         ExceldatadatacomparesvView.as_view(), name='exceldatacomparecolumnsv'),
    path("v1/exceldata/comparecolumn/operatorand/",
         ExceldatadatacomparesandView.as_view(), name='exceldatacomparesand'),
    path("v1/exceldata/comparecolumn/operatoror/",
         ExceldatadatacomparesorView.as_view(), name='exceldatacomparesor'),
    path("v1/exceldata/comparecolumn/operatornot/",
         ExceldatadatacomparesnotView.as_view(), name='exceldatacomparesnot'),
    path("v1/exceldata/columns/sum/",
         ExceldatacolumnsumView.as_view(), name='exceldatacolumnsum'),
    path("v1/exceldata/columns/Average/",
         ExceldatacolumnaverageView.as_view(), name='exceldatacolumnaverage'),
    path("v1/exceldata/columns/Difference/",
         ExceldatacolumndifferenceView.as_view(), name='exceldatacolumndifference'),
    path("v1/exceldata/columns/Multiply/",
         ExceldatacolumnmultiplyView.as_view(), name='exceldatacolumnmultiply'),
    path("v1/exceldata/columns/Divide/",
         ExceldatacolumndivideView.as_view(), name='exceldatacolumndivide'),
    path("v1/exceldata/columns/Daterange/",
         ExceldatacolumndaterangeView.as_view(), name='exceldatacolumndaterange'),
    path("v1/exceldata/fillblanks/", ExceldatafillblanksView.as_view(),
         name='exceldatafillblanks'),
    path("v1/exceldata/datevalidation/",
         ExceldatadatevalidateView.as_view(), name='exceldatadatevalidate'),
    path("v1/exceldata/emailvalidation/",
         ExceldataemailvalidateView.as_view(), name='exceldataemailvalidate'),
    path("v1/exceldata/phonevalidation/",
         ExceldataphonevalidateView.as_view(), name='exceldataphonevalidate'),
    path("v1/listvalidation/string/", ListdatastringvalidateView.as_view(),
         name='listadatavalidatestring'),
    path("v1/exceldata/uploaddictionary/",
         UploaddictionaryView.as_view(), name='uploaddictionary'),
    path("v1/exceldata/dictionary/replacevalues/",
         DictionaryreplacevaluesView.as_view(), name='dictionaryreplacevalues'),
    path("v1/exceldata/dictionary/removeduplicates/",
         DictionaryremoveduplicatesView.as_view(), name='dictionaryremoveduplicates'),
    path("v1/exceldata/dictionary/stringlen/",
         DictionarystringlenView.as_view(), name='dictionarystringlen'),
    path("v1/exceldata/dictionary/stringcount/",
         DictionarystringcountView.as_view(), name='dictionarystringcount'),
    path("v1/exceldata/dictionary/stringparse/",
         DictionarystringparseView.as_view(), name='dictionarystringparse'),
    path("v1/exceldata/dictionary/stringdelete/",
         DictionarystringdeleteView.as_view(), name='dictionarystringdelete'),
    path("v1/exceldata/deletevalues/getvalidinvalid/",
         ExceldatagetvalidinvalidView.as_view(), name='dictionarygetvalidinvalid'),
    path("v1/exceldata/deletevalues/invalid/",
         ExceldatadeletevaluesView.as_view(), name='Exceldatadeletevalues'),
    path("v1/exceldata/staticvalues/invalid/",
         ExceldatastaticvaluesView.as_view(), name='Exceldatastaticvalues'),
    path("v1/exceldata/originalvalues/",
         ExceldataoriginalvaluesView.as_view(), name='Exceldataoriginalvalues'),
    #  Matching Config Url
    path("v1/matchconfig/",
         MatchingConfigView.as_view(), name='MatchConfig'),
    # To get modelname
    path("v1/getmodelname/", ModelNameAPIView.as_view(), name='ModelName'),
    # to convert excel to json
    path("v1/exceltojson/", ExcelToJson.as_view(), name='ExcelToJson'),





]
